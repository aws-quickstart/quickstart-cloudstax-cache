{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template creates the Lambda function that creates and deletes the Redis service.",
  "Parameters": {
    "ServiceSecurityGroupID": {
      "Type": "AWS::EC2::SecurityGroup::Id",
      "Description": "The SecurityGroup to access the cluster nodes."
    },
    "SubnetIDs": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "The existing subnet to run Lambda function. This should be the subnet in the VPC where the Redis nodes are deployed."
    },
    "QSS3BucketName": {
      "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
      "Default": "quickstart-reference",
      "Type": "String",
      "ConstraintDescription": "The Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
      "Description": "S3 bucket name for the CloudFormation templates. The CloudFormation template bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    },
    "QSS3KeyPrefix": {
      "AllowedPattern": "^[0-9a-zA-Z-/]*$",
      "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
      "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
      "Default": "cloudstax/redis/latest/",
      "Type": "String"
    },
    "S3ObjectLambdaZip": {
      "Type": "String",
      "Default": "functions/packages/ServiceCreation/lambda.zip",
      "AllowedValues": [
        "functions/packages/ServiceCreation/lambda.zip"
      ],
      "Description": "The Redis lambda zip object"
    },
    "DeleteVolume": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Whether delete Redis EBS volumes when deleting the stack"
    },
    "ClusterName": {
      "Type": "String",
      "Description": "The Cluster Name",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
      "ConstraintDescription": "Cluster name must start with a letter and can only contain letters, numbers, or hyphens."
    },
    "ServiceName": {
      "Type": "String",
      "Description": "The Redis Service Name",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
      "ConstraintDescription": "Service name must start with a letter and can only contain letters, numbers, or hyphens."
    },
    "Shards": {
      "Type": "Number",
      "Default": "3",
      "Description": "Number of Redis shards"
    },
    "ReplicasPerShard": {
      "Type": "Number",
      "Default": "2",
      "Description": "Number of replicas per shard"
    },
    "MemoryCacheSizeMB": {
      "Type": "Number",
      "Default": "256",
      "Description": "The memory cache size of one Redis node"
    },
    "VolumeType": {
      "Type": "String",
      "Default": "gp2",
      "AllowedValues": [
        "gp2",
        "io1",
        "st1"
      ],
      "Description": "The Redis volume type"
    },
    "Iops": {
      "Type": "Number",
      "Default": 100,
      "Description": "The iops of the volume, valid for io1 type volume only."
    },
    "VolumeSizeGB": {
      "Type": "Number",
      "Default": "1",
      "Description": "The Redis volume size. If AOF is enabled, volume size should be 6x of memory cache size. If AOF is disabled, volume size could be 2x of memory cache size."
    },
    "DisableAOF": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Enable/Disable Redis append only file"
    },
    "AuthPass": {
      "Type": "String",
      "Default": "",
      "NoEcho": "true",
      "MaxLength": "255",
      "Description": "Enter your Redis AUTH Password",
      "ConstraintDescription": "Input your Redis AUTH password"
    },
    "ReplTimeoutSecs": {
      "Type": "Number",
      "Default": "60",
      "Description": "The Redis replication timeout seconds"
    },
    "MaxMemoryPolicy": {
      "Type": "String",
      "Default": "allkeys-lru",
      "AllowedValues": [
        "noeviction",
        "volatile-lru",
        "allkeys-lru",
        "volatile-lfu",
        "allkeys-lfu",
        "volatile-random",
        "allkeys-random",
        "volatile-ttl"
      ],
      "Description": "Redis eviction policy when the memory limit is reached"
    },
    "ConfigCommandName": {
      "Type": "String",
      "Default": "",
      "Description": "The new name for Redis CONFIG command, empty name means disable the command",
      "MinLength": "0",
      "MaxLength": "255",
      "AllowedPattern": "[a-zA-Z]*",
      "ConstraintDescription": "ConfigCommandName must start with a letter and can only contain letters."
    }
  },
  "Conditions": {
    "GovCloudCondition": {
      "Fn::Equals": [
        {
          "Ref": "AWS::Region"
        },
        "us-gov-west-1"
      ]
    }
  },
  "Resources": {
    "CommonLambdaStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": [
            "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-cloudstax-firecamp/templates/firecamp-lambda-common.template",
            {
              "QSS3Region": {
                "Fn::If": [
                  "GovCloudCondition",
                  "s3-us-gov-west-1",
                  "s3"
                ]
              }
            }
          ]
        },
        "Parameters": {
          "ClusterName": {
            "Ref": "ClusterName"
          },
          "QSS3BucketName": {
            "Ref": "QSS3BucketName"
          },
          "QSS3KeyPrefix": {
            "Ref": "QSS3KeyPrefix"
          },
          "S3ObjectLambdaZip": {
            "Ref": "S3ObjectLambdaZip"
          }
        }
      }
    },
    "VPCDestroyENI": {
      "Type": "Custom::VPCDestroyENI",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CommonLambdaStack",
            "Outputs.VPCDestroyENIFunctionArn"
          ]
        },
        "SecurityGroups": [
          {
            "Ref": "ServiceSecurityGroupID"
          }
        ]
      }
    },
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::GetAtt": [
              "CommonLambdaStack",
              "Outputs.DestBucket"
            ]
          },
          "S3Key": {
            "Fn::GetAtt": [
              "CommonLambdaStack",
              "Outputs.LambdaDestObject"
            ]
          }
        },
        "Runtime": "python3.6",
        "Role": {
          "Fn::GetAtt": [
            "CommonLambdaStack",
            "Outputs.LambdaExecutionRoleArn"
          ]
        },
        "Timeout": 300,
        "Handler": "setup.lambda_handler",
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "ServiceSecurityGroupID"
            }
          ],
          "SubnetIds": {
            "Ref": "SubnetIDs"
          }
        }
      }
    },
    "LambdaFunctionLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "ClusterName"
              },
              "aws/lambda",
              {
                "Ref": "LambdaFunction"
              }
            ]
          ]
        },
        "RetentionInDays": 30
      }
    },
    "LambdaCustomResource": {
      "Type": "Custom::RedisLambdaCustomResource",
      "DependsOn": "VPCDestroyENI",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        },
        "Region": {
          "Ref": "AWS::Region"
        },
        "DeleteVolume": {
          "Ref": "DeleteVolume"
        },
        "Cluster": {
          "Ref": "ClusterName"
        },
        "ServiceName": {
          "Ref": "ServiceName"
        },
        "Shards": {
          "Ref": "Shards"
        },
        "ReplicasPerShard": {
          "Ref": "ReplicasPerShard"
        },
        "MemoryCacheSizeMB": {
          "Ref": "MemoryCacheSizeMB"
        },
        "VolumeType": {
          "Ref": "VolumeType"
        },
        "Iops": {
          "Ref": "Iops"
        },
        "VolumeSizeGB": {
          "Ref": "VolumeSizeGB"
        },
        "DisableAOF": {
          "Ref": "DisableAOF"
        },
        "AuthPass": {
          "Ref": "AuthPass"
        },
        "ReplTimeoutSecs": {
          "Ref": "ReplTimeoutSecs"
        },
        "MaxMemPolicy": {
          "Ref": "MaxMemoryPolicy"
        },
        "ConfigCmdName": {
          "Ref": "ConfigCommandName"
        }
      }
    }
  }
}
